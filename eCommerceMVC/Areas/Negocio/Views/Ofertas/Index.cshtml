@model eCommerce.Entities.ViewModels.OfertasViewModel

@{
    ViewData["Title"] = "Ofertas Especiales";
    Layout = "~/Areas/Negocio/Views/Shared/_Layout.cshtml";
}

<header class="py-5" style="background: linear-gradient(135deg, #dc3545 0%, #ff6b6b 100%);">
    <div class="container px-4 px-lg-5 my-5">
        <div class="text-center text-white">
            <h1 class="display-4 fw-bolder">🔥 @Model.TituloSeccion</h1>
            <p class="lead fw-normal mb-0" style="opacity: 0.9;">@Model.DescripcionSeccion</p>
        </div>
    </div>
</header>

<section class="py-5">
    <div class="container px-4 px-lg-5 mt-5">
        @if (!Model.ProductosEnOferta.Any())
        {
            <div class="text-center py-5">
                <i class="bi bi-tag display-1 text-muted"></i>
                <h3 class="mt-3">No hay ofertas disponibles en este momento</h3>
                <p class="text-muted">Volvé pronto para encontrar las mejores ofertas</p>
                <a href="@Url.Action("Index", "Catalogo", new { area = "Negocio" })" class="btn btn-primary mt-3">
                    <i class="bi bi-shop me-1"></i>Ver todos los productos
                </a>
            </div>
        }
        else
        {
            <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                @foreach (var producto in Model.ProductosEnOferta)
                {
                    <div class="col mb-5">
                        <div class="card h-100 border-0 shadow-sm position-relative">
                            <!-- Badge de descuento -->
                            <div class="position-absolute top-0 start-0 m-2" style="z-index: 10;">
                                <span class="badge bg-danger fs-6">
                                    🔥 -@producto.PorcentajeDescuento%
                                </span>
                            </div>

                            <!-- Badge de días restantes -->
                            @if (producto.DiasRestantes <= 3)
                            {
                                <div class="position-absolute top-0 end-0 m-2" style="z-index: 10;">
                                    <span class="badge bg-warning text-dark">
                                        <i class="bi bi-clock"></i> @producto.DiasRestantes día@(producto.DiasRestantes != 1 ? "s" : "")
                                    </span>
                                </div>
                            }

                            <!-- Imagen del producto -->
                            <a href="@Url.Action("Detalle", "Catalogo", new { area = "Negocio", id = producto.IdProducto })" class="text-decoration-none text-dark">
                                <img class="card-img-top"
                                     src="@(producto.RutaImagen ?? "https://dummyimage.com/450x300/dee2e6/6c757d.jpg")"
                                     alt="@producto.Nombre"
                                     style="height: 200px; object-fit: cover;" />
                            </a>

                            <div class="card-body p-4 text-center">
                                <!-- Marca -->
                                @if (!string.IsNullOrEmpty(producto.Marca))
                                {
                                    <small class="text-muted d-block mb-1">
                                        <i class="bi bi-tag"></i> @producto.Marca
                                    </small>
                                }

                                <!-- Nombre del producto -->
                                <a href="@Url.Action("Detalle", "Catalogo", new { area = "Negocio", id = producto.IdProducto })" class="text-decoration-none text-dark">
                                    <h5 class="fw-bolder">@producto.Nombre</h5>
                                </a>

                                <!-- Precios -->
                                <div class="mb-2">
                                    <small class="text-muted text-decoration-line-through d-block">
                                        Antes: $@producto.PrecioOriginal.ToString("N2")
                                    </small>
                                </div>

                                <div class="mb-2">
                                    <span class="fw-bold fs-4" style="color: #dc3545;">
                                        $@producto.PrecioOferta.ToString("N2")
                                    </span>
                                </div>

                                <div class="text-success small fw-bold mb-3">
                                    <i class="bi bi-piggy-bank"></i> Ahorrás $@producto.AhorroTotal.ToString("N2")
                                </div>

                                <!-- Stock -->
                                @if (producto.Stock < 10)
                                {
                                    <div class="text-warning small mb-2">
                                        <i class="bi bi-exclamation-triangle"></i> ¡Solo quedan @producto.Stock unidades!
                                    </div>
                                }
                                else
                                {
                                    <div class="text-success small mb-2">
                                        <i class="bi bi-check-circle"></i> Stock disponible
                                    </div>
                                }
                            </div>

                            <div class="card-footer p-4 pt-0 border-top-0 bg-transparent text-center">
                                <button class="btn btn-custom mt-auto agregar-carrito w-100" data-producto="@producto.IdProducto">
                                    <i class="bi bi-cart-plus me-1"></i>Agregar al carrito
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>

<style>
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(220, 53, 69, 0.2);
        }

    .card-img-top {
        transition: transform 0.3s ease;
    }

    .card:hover .card-img-top {
        transform: scale(1.05);
    }

    .btn-custom {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        transition: all 0.3s ease;
    }

        .btn-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            color: white;
        }

        .btn-custom:disabled {
            background: #6c757d;
            cursor: not-allowed;
        }
</style>

@section Scripts {
    <script>
        console.log('Script de ofertas cargado');

        $(document).ready(function () {
            console.log('jQuery ready - Ofertas');

            // ========== CONFIGURAR ANTIFORGERY TOKEN ==========
            $.ajaxSetup({
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            });

            // ========== AGREGAR AL CARRITO ==========
            $(document).on('click', '.agregar-carrito', function (e) {
                e.preventDefault();
                console.log('Click en agregar carrito');

                const idProducto = $(this).data('producto');
                const boton = $(this);
                const textoOriginal = boton.html();

                console.log('ID Producto:', idProducto);

                // Validar que tenemos el ID
                if (!idProducto) {
                    alert('Error: No se pudo identificar el producto');
                    return;
                }

                // Deshabilitar botón y mostrar loading
                boton.prop('disabled', true);
                boton.html('<span class="spinner-border spinner-border-sm me-1"></span>Agregando...');

                $.ajax({
                    url: '@Url.Action("Agregar", "Carrito", new { area = "Negocio" })',
                    type: 'POST',
                    data: {
                        productoId: idProducto,
                        cantidad: 1
                    },
                    success: function (response) {
                        console.log('Respuesta del servidor:', response);

                        if (response.success) {
                            // Mostrar mensaje de éxito
                            if (typeof toastr !== 'undefined') {
                                toastr.success('¡Producto agregado al carrito!', '', {
                                    closeButton: true,
                                    progressBar: true,
                                    positionClass: 'toast-top-right',
                                    timeOut: 3000
                                });
                            } else {
                                // Fallback si toastr no está disponible
                                const alertDiv = `
                                    <div class="alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3" role="alert" style="z-index: 9999;">
                                        <i class="bi bi-check-circle me-2"></i>¡Producto agregado al carrito!
                                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                    </div>
                                `;
                                $('body').append(alertDiv);
                                setTimeout(() => $('.alert').fadeOut(), 3000);
                            }

                            // Actualizar contador del carrito
                            actualizarContadorCarrito();

                            // Restaurar botón con animación de éxito
                            setTimeout(function() {
                                boton.html('<i class="bi bi-check-circle me-1"></i>¡Agregado!');
                                boton.removeClass('btn-custom').addClass('btn-success');

                                setTimeout(function() {
                                    boton.html(textoOriginal);
                                    boton.removeClass('btn-success').addClass('btn-custom');
                                    boton.prop('disabled', false);
                                }, 1500);
                            }, 500);
                        } else {
                            const mensaje = response.message || 'Error al agregar el producto';

                            if (typeof toastr !== 'undefined') {
                                toastr.error(mensaje, '', {
                                    closeButton: true,
                                    progressBar: true,
                                    positionClass: 'toast-top-right'
                                });
                            } else {
                                alert(mensaje);
                            }

                            boton.html(textoOriginal);
                            boton.prop('disabled', false);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error AJAX:', error);
                        console.error('Status:', status);
                        console.error('Response:', xhr.responseText);

                        const errorMsg = 'Error al agregar el producto al carrito';

                        if (typeof toastr !== 'undefined') {
                            toastr.error(errorMsg, '', {
                                closeButton: true,
                                progressBar: true,
                                positionClass: 'toast-top-right'
                            });
                        } else {
                            alert(errorMsg);
                        }

                        boton.html(textoOriginal);
                        boton.prop('disabled', false);
                    }
                });
            });

            // Función para actualizar el contador del carrito
            function actualizarContadorCarrito() {
                $.ajax({
                    url: '@Url.Action("Cantidad", "Carrito", new { area = "Negocio" })',
                    type: 'GET',
                    success: function (cantidad) {
                        console.log('Cantidad en carrito:', cantidad);

                        // Buscar el badge del carrito (múltiples selectores posibles)
                        const badge = $('#cart-count, .cart-badge, .badge-carrito, .carrito-badge, [data-cart-count]');

                        if (badge.length) {
                            badge.text(cantidad);

                            // Mostrar badge si estaba oculto
                            if (cantidad > 0) {
                                badge.removeClass('d-none');
                            }

                            // Animación del badge (si animate.css está disponible)
                            if (typeof $.fn.addClass !== 'undefined') {
                                badge.addClass('animate__animated animate__rubberBand');
                                setTimeout(function() {
                                    badge.removeClass('animate__animated animate__rubberBand');
                                }, 1000);
                            }
                        } else {
                            console.warn('No se encontró el badge del carrito en el DOM');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log('No se pudo actualizar el contador del carrito:', error);
                    }
                });
            }

            // Log inicial para debug
            console.log('Botones de carrito encontrados:', $('.agregar-carrito').length);
        });
    </script>
}
}