@model eCommerce.Entities.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
    Layout = "_Layout";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-shopping-cart me-2"></i>
                        Finalizar Compra
                    </h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("ProcesarPedido", "Checkout", FormMethod.Post, new { @class = "checkout-form" }))
                    {
                        @Html.AntiForgeryToken()

                        <!-- Paso 1: Dirección de Envío -->
                        <div class="checkout-step mb-4">
                            <h5 class="step-title">
                                <span class="step-number">1</span>
                                Dirección de Envío
                            </h5>

                            <div class="step-content">
                                @if (Model.DireccionesDisponibles.Any())
                                {
                                    <div class="direcciones-existentes mb-3">
                                        <h6>Seleccionar dirección guardada:</h6>
                                        @foreach (var direccion in Model.DireccionesDisponibles)
                                        {
                                            <div class="form-check direccion-card">
                                                @Html.RadioButtonFor(m => m.DireccionEnvioSeleccionada, direccion.IdDireccionEnvio, new { @class = "form-check-input direccion-radio", id = $"direccion_{direccion.IdDireccionEnvio}" })
                                                <label class="form-check-label w-100" for="direccion_@direccion.IdDireccionEnvio">
                                                    <div class="card direccion-option">
                                                        <div class="card-body p-3">
                                                            <div class="d-flex justify-content-between align-items-start">
                                                                <div>
                                                                    <strong>@direccion.NombreCompleto</strong>
                                                                    @if (direccion.EsDireccionPrincipal)
                                                                    {
                                                                        <span class="badge bg-primary ms-2">Principal</span>
                                                                    }
                                                                    <br>
                                                                    <small class="text-muted">
                                                                        @direccion.Direccion<br>
                                                                        @direccion.Ciudad, @direccion.Provincia - @direccion.CodigoPostal<br>
                                                                        Tel: @direccion.Telefono
                                                                        @if (!string.IsNullOrEmpty(direccion.Referencias))
                                                                        {
                                                                            <br>
                                                            
                                                                            <em>@direccion.Referencias</em>
                                                                        }
                                                                    </small>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </label>
                                            </div>
                                        }
                                    </div>

                                    <div class="text-center mb-3">
                                        <button type="button" class="btn btn-outline-primary" id="btn-nueva-direccion">
                                            <i class="fas fa-plus me-2"></i>Agregar Nueva Dirección
                                        </button>
                                    </div>
                                    @Html.HiddenFor(m => m.UsarNuevaDireccion)
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle me-2"></i>
                                        No tienes direcciones guardadas. Agrega una nueva dirección para continuar.
                                    </div>
                                    @Html.HiddenFor(m => m.UsarNuevaDireccion, new { @value = "true" })
                                }

                                <div id="nueva-direccion-form" style="@(Model.DireccionesDisponibles.Any() ? "display: none;" : "")">
                                    <div class="card bg-light">
                                        <div class="card-header">
                                            <h6 class="mb-0">Nueva Dirección de Envío</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-md-6 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.NombreCompleto, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.NombreCompleto, new { @class = "form-control", placeholder = "Nombre completo" })
                                                    @Html.ValidationMessageFor(m => m.NuevaDireccion.NombreCompleto, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-6 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.Telefono, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.Telefono, new { @class = "form-control", placeholder = "Teléfono" })
                                                    @Html.ValidationMessageFor(m => m.NuevaDireccion.Telefono, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-12 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.Direccion, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.Direccion, new { @class = "form-control", placeholder = "Calle y número" })
                                                    @Html.ValidationMessageFor(m => m.NuevaDireccion.Direccion, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-4 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.Ciudad, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.Ciudad, new { @class = "form-control", placeholder = "Ciudad" })
                                                    @Html.ValidationMessageFor(m => m.NuevaDireccion.Ciudad, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-4 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.Provincia, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.Provincia, new { @class = "form-control", placeholder = "Provincia" })
                                                    @Html.ValidationMessageFor(m => m.NuevaDireccion.Provincia, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-4 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.CodigoPostal, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.CodigoPostal, new { @class = "form-control", placeholder = "CP" })
                                                    @Html.ValidationMessageFor(m => m.NuevaDireccion.CodigoPostal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-12 mb-3">
                                                    @Html.LabelFor(m => m.NuevaDireccion.Referencias, new { @class = "form-label" })
                                                    @Html.TextBoxFor(m => m.NuevaDireccion.Referencias, new { @class = "form-control", placeholder = "Referencias (opcional)" })
                                                </div>
                                            </div>
                                            <div class="form-check">
                                                @Html.CheckBoxFor(m => m.NuevaDireccion.GuardarDireccion, new { @class = "form-check-input" })
                                                @Html.LabelFor(m => m.NuevaDireccion.GuardarDireccion, "Guardar para futuras compras", new { @class = "form-check-label" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Paso 2: Método de Pago -->
                        <div class="checkout-step mb-4">
                            <h5 class="step-title">
                                <span class="step-number">2</span>
                                Método de Pago
                            </h5>

                            <div class="step-content">
                                <div class="row">
                                    @foreach (var metodo in Model.MetodosPagoDisponibles)
                                    {
                                        <div class="col-md-6 mb-3">
                                            <div class="form-check metodo-pago-card">
                                                @Html.RadioButtonFor(m => m.MetodoPagoSeleccionado, metodo.IdMetodoPago, new { @class = "form-check-input metodo-pago-radio", id = $"pago_{metodo.IdMetodoPago}" })
                                                <label class="form-check-label w-100" for="pago_@metodo.IdMetodoPago">
                                                    <div class="card">
                                                        <div class="card-body text-center p-3">
                                                            <i class="fas fa-@GetPaymentIcon(metodo.Nombre) fa-2x mb-2 text-primary"></i>
                                                            <h6 class="mb-1">@metodo.Nombre</h6>
                                                            <small class="text-muted">@metodo.Descripcion</small>
                                                        </div>
                                                    </div>
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <!-- Formulario Tarjeta -->
                                <div id="form-tarjeta" style="display: none;">
                                    <div class="card bg-light mt-3">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-credit-card me-2"></i>Datos de la Tarjeta</h6>
                                        </div>
                                        
                                            <div class="row">
                                                <div class="col-12 mb-3">
                                                    <label class="form-label">Número de Tarjeta *</label>
                                                    <input type="text" class="form-control" id="numero-tarjeta" placeholder="1234 5678 9012 3456" maxlength="19">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6 mb-3">
                                                    <label class="form-label">Titular *</label>
                                                    <input type="text" class="form-control" id="titular-tarjeta" placeholder="NOMBRE APELLIDO" style="text-transform: uppercase;">
                                                </div>
                                                <div class="col-md-3 mb-3">
                                                    <label class="form-label">Vencimiento *</label>
                                                    <input type="text" class="form-control" id="vencimiento-tarjeta" placeholder="MM/AA" maxlength="5">
                                                </div>
                                                <div class="col-md-3 mb-3">
                                                    <label class="form-label">CVV *</label>
                                                    <input type="text" class="form-control" id="cvv-tarjeta" placeholder="123" maxlength="4">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Formulario Transferencia -->
                                <div id="form-transferencia" style="display: none;">
                                    <div class="card bg-light mt-3">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-university me-2"></i>Datos para Transferencia</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="alert alert-info mb-3">
                                                <strong>CBU:</strong> 0170099220000037914652<br>
                                                <strong>Alias:</strong> TIENDA.HARDWARE.EJEMPLO<br>
                                                <strong>Titular:</strong> eCommerce Store S.A.<br>
                                                <strong>CUIT:</strong> 20-12345678-9
                                            </div>
                                            <div class="alert alert-warning">
                                                <i class="fas fa-exclamation-triangle me-2"></i>
                                                Envía el comprobante a: pagos@ecommerce-demo.com
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        

                        <!-- Paso 3: Cupón -->
                        <div class="checkout-step mb-4">
                            <h5 class="step-title">
                                <span class="step-number">3</span>
                                Cupón de Descuento (Opcional)
                            </h5>
                            <div class="step-content">
                                <div class="row align-items-end">
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(m => m.CodigoCupon, new { @class = "form-control", placeholder = "Código de cupón", id = "codigo-cupon" })
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" class="btn btn-outline-secondary w-100" id="btn-aplicar-cupon">
                                            <i class="fas fa-tag me-2"></i>Aplicar
                                        </button>
                                    </div>
                                </div>
                                <div id="mensaje-cupon" class="mt-2" style="display: none;"></div>
                            </div>
                        </div>

                        <!-- Paso 4: Notas -->
                        <div class="checkout-step mb-4">
                            <h5 class="step-title">
                                <span class="step-number">4</span>
                                Notas Especiales (Opcional)
                            </h5>
                            <div class="step-content">
                                @Html.TextAreaFor(m => m.NotasEspeciales, new { @class = "form-control", @rows = "3", placeholder = "Instrucciones de entrega..." })
                            </div>
                        </div>

                        <!-- Términos -->
                        <div class="mb-4">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.AceptaTerminos, new { @class = "form-check-input", @required = "required" })
                                <label class="form-check-label">
                                    Acepto los <a href="#" target="_blank">términos y condiciones</a>
                                </label>
                            </div>
                        </div>

                        <!-- Botón Finalizar -->
                        <div class="text-center">
                            <button type="submit" class="btn btn-success btn-lg px-5" id="btn-finalizar-compra">
                                <i class="fas fa-lock me-2"></i>Finalizar Compra
                                <span class="total-final ms-2">$@Model.Total.ToString("N2")</span>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Resumen -->
        <div class="col-lg-4">
            <div class="card shadow-sm sticky-top" style="top: 20px;">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="fas fa-receipt me-2"></i>Resumen del Pedido</h5>
                </div>
                <div class="card-body">
                    <div class="productos-resumen mb-3">
                        @foreach (var item in Model.ItemsCarrito)
                        {
                            <div class="d-flex align-items-center mb-2 pb-2 border-bottom">
                                <img src="@(!string.IsNullOrEmpty(item.RutaImagen) ? item.RutaImagen : "/images/no-image.png")"
                                     alt="@item.NombreProducto" class="producto-img me-3">
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">@item.NombreProducto</h6>
                                    <small class="text-muted">@item.NombreMarca</small>
                                    <div class="d-flex justify-content-between">
                                        <span>Cant: @item.Cantidad</span>
                                        <strong>$@item.Subtotal.ToString("N2")</strong>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="totales">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal (@Model.TotalItems items):</span>
                            <span id="subtotal-valor">$@Model.Subtotal.ToString("N2")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Envío:</span>
                            <span id="envio-valor">$@Model.CostoEnvio.ToString("N2")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2 text-success" id="descuento-row" style="@(Model.DescuentoAplicado > 0 ? "" : "display: none;")">
                            <span>Descuento:</span>
                            <span id="descuento-valor">-$@Model.DescuentoAplicado.ToString("N2")</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between">
                            <strong>Total:</strong>
                            <strong class="text-primary fs-5" id="total-valor">$@Model.Total.ToString("N2")</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetPaymentIcon(string metodoPago)
    {
        return metodoPago.ToLower() switch
        {
            var x when x.Contains("tarjeta") || x.Contains("crédito") || x.Contains("débito") => "credit-card",
            var x when x.Contains("efectivo") => "money-bill-wave",
            var x when x.Contains("transferencia") => "university",
            var x when x.Contains("mercadopago") => "mobile-alt",
            _ => "credit-card"
        };
    }
}

<style>
    .checkout-step {
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 20px;
        background-color: #fafafa;
    }

    .step-title {
        color: #495057;
        border-bottom: 2px solid #dee2e6;
        padding-bottom: 10px;
        margin-bottom: 20px;
    }

    .step-number {
        background-color: #007bff;
        color: white;
        border-radius: 50%;
        padding: 5px 10px;
        margin-right: 10px;
        font-weight: bold;
    }

    .direccion-option, .metodo-pago-card .card {
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
        cursor: pointer;
    }

        .direccion-option:hover, .metodo-pago-card .card:hover {
            border-color: #007bff;
            box-shadow: 0 2px 4px rgba(0,123,255,0.1);
        }

    .form-check-input:checked + label .card {
        border-color: #007bff;
        background-color: #f8f9ff;
    }

    .producto-img {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 4px;
    }

    .campo-requerido {
        border-color: #dc3545 !important;
        animation: shake 0.3s;
    }
    @@keyframes shake {
        0%, 100%

    {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-5px);
    }

    75% {
        transform: translateX(5px);
    }

    }
</style>

@section Scripts {
    <script>
        console.log('Iniciando script checkout');

        $(document).ready(function() {
            console.log('jQuery cargado - Script ejecutándose');

            var metodoPagoSeleccionado = '@Model.MetodoPagoSeleccionado';

            if (metodoPagoSeleccionado && metodoPagoSeleccionado !== '0') {
                $('#pago_' + metodoPagoSeleccionado).prop('checked', true).closest('.metodo-pago-card').find('.card').addClass('selected');
                mostrarFormularioPago(metodoPagoSeleccionado);
            }

            // BOTÓN NUEVA DIRECCIÓN
            $('#btn-nueva-direccion').on('click', function(e) {
                e.preventDefault();
                console.log('Click en botón nueva dirección');

                var $form = $('#nueva-direccion-form');
                var visible = $form.is(':visible');
                console.log('Formulario visible antes:', visible);

                if (visible) {
                    $form.slideUp(300);
                    $('input[name="UsarNuevaDireccion"]').val('false');
                    $(this).html('<i class="fas fa-plus me-2"></i>Agregar Nueva Dirección');
                } else {
                    $form.slideDown(300);
                    $('input[name="UsarNuevaDireccion"]').val('true');
                    $('.direccion-radio').prop('checked', false);
                    $(this).html('<i class="fas fa-minus me-2"></i>Cancelar');
                }
            });

            // MÉTODOS DE PAGO
            $('input[name="MetodoPagoSeleccionado"]').on('change', function() {
                console.log('Cambio en método de pago:', $(this).val());
                $('.metodo-pago-card .card').removeClass('selected');
                if ($(this).is(':checked')) {
                    $(this).closest('.metodo-pago-card').find('.card').addClass('selected');
                    mostrarFormularioPago($(this).val());
                }
            });

            function mostrarFormularioPago(idMetodo) {
                console.log('Mostrando formulario para método ID:', idMetodo);
                $('#form-tarjeta, #form-transferencia').hide();

                var $metodoCard = $('#pago_' + idMetodo).closest('.metodo-pago-card');
                var nombre = $metodoCard.find('h6').text().toLowerCase();
                console.log('Nombre del método encontrado:', nombre);

                if (nombre.indexOf('tarjeta') > -1 || nombre.indexOf('crédito') > -1 || nombre.indexOf('débito') > -1) {
                    console.log('Mostrando formulario de tarjeta');
                    $('#form-tarjeta').slideDown(300);
                } else if (nombre.indexOf('transferencia') > -1) {
                    console.log('Mostrando formulario de transferencia');
                    $('#form-transferencia').slideDown(300);
                }
            }

            $('.direccion-radio').on('change', function() {
                if ($(this).is(':checked')) {
                    $('#nueva-direccion-form').slideUp(300);
                    $('input[name="UsarNuevaDireccion"]').val('false');
                    $('#btn-nueva-direccion').html('<i class="fas fa-plus me-2"></i>Agregar Nueva Dirección');
                }
            });

            $('form.checkout-form').on('submit', function(e) {
                var metodoPago = $('input[name="MetodoPagoSeleccionado"]:checked').val();
                var direccion = $('input[name="DireccionEnvioSeleccionada"]:checked').val();
                var usaNueva = $('input[name="UsarNuevaDireccion"]').val() === 'true';
                var terminos = $('input[name="AceptaTerminos"]').is(':checked');

                console.log('Submit - Método pago:', metodoPago);
                console.log('Submit - Dirección:', direccion);
                console.log('Submit - Usa nueva:', usaNueva);
                console.log('Submit - Términos:', terminos);

                if (!metodoPago || metodoPago === '0') {
                    alert('Por favor seleccione un método de pago');
                    e.preventDefault();
                    return false;
                }

                if (!direccion && !usaNueva) {
                    alert('Por favor seleccione una dirección de envío');
                    e.preventDefault();
                    return false;
                }

                if (!terminos) {
                    alert('Debe aceptar los términos y condiciones');
                    e.preventDefault();
                    return false;
                }

                var $metodoCard = $('#pago_' + metodoPago).closest('.metodo-pago-card');
                var nombre = $metodoCard.find('h6').text().toLowerCase();

                if ((nombre.indexOf('tarjeta') > -1 || nombre.indexOf('crédito') > -1 || nombre.indexOf('débito') > -1) && $('#form-tarjeta').is(':visible')) {
                    if (!validarTarjeta()) {
                        e.preventDefault();
                        return false;
                    }
                } else if (nombre.indexOf('transferencia') > -1) {
                    if (!confirm('¿Has realizado la transferencia?\n\nRecuerda enviar el comprobante a: pagos@ecommerce-demo.com')) {
                        e.preventDefault();
                        return false;
                    }
                } else if (nombre.indexOf('mercadopago') > -1) {
                    if (!confirm('Serás redirigido a MercadoPago. ¿Continuar?')) {
                        e.preventDefault();
                        return false;
                    }
                } else if (nombre.indexOf('efectivo') > -1) {
                    if (!confirm('Pago contra entrega. ¿Confirmas?')) {
                        e.preventDefault();
                        return false;
                    }
                }
            });

            function validarTarjeta() {
                var numero = $('#numero-tarjeta').val().trim();
                var titular = $('#titular-tarjeta').val().trim();
                var venc = $('#vencimiento-tarjeta').val().trim();
                var cvv = $('#cvv-tarjeta').val().trim();

                if (!numero || !titular || !venc || !cvv) {
                    alert('Complete todos los datos de la tarjeta');
                    if (!numero) $('#numero-tarjeta').addClass('campo-requerido').focus();
                    else if (!titular) $('#titular-tarjeta').addClass('campo-requerido').focus();
                    else if (!venc) $('#vencimiento-tarjeta').addClass('campo-requerido').focus();
                    else if (!cvv) $('#cvv-tarjeta').addClass('campo-requerido').focus();
                    return false;
                }

                var numeroLimpio = numero.replace(/\s/g, '');
                if (numeroLimpio.length < 15) {
                    alert('Número de tarjeta inválido (mínimo 15 dígitos)');
                    $('#numero-tarjeta').addClass('campo-requerido').focus();
                    return false;
                }

                if (!/^\d{2}\/\d{2}$/.test(venc)) {
                    alert('Formato inválido. Use MM/AA');
                    $('#vencimiento-tarjeta').addClass('campo-requerido').focus();
                    return false;
                }

                var partes = venc.split('/');
                var mes = parseInt(partes[0]);
                if (mes < 1 || mes > 12) {
                    alert('Mes inválido (debe ser 01-12)');
                    $('#vencimiento-tarjeta').addClass('campo-requerido').focus();
                    return false;
                }

                if (cvv.length < 3) {
                    alert('CVV inválido (mínimo 3 dígitos)');
                    $('#cvv-tarjeta').addClass('campo-requerido').focus();
                    return false;
                }

                return true;
            }

            // Formateo automático
            $('#numero-tarjeta').on('input', function() {
                $(this).removeClass('campo-requerido');
                var value = $(this).val().replace(/\s/g, '').replace(/\D/g, '');
                var formatted = value.match(/.{1,4}/g);
                $(this).val(formatted ? formatted.join(' ') : value);
            });

            $('#vencimiento-tarjeta').on('input', function() {
                $(this).removeClass('campo-requerido');
                var value = $(this).val().replace(/\D/g, '');
                if (value.length >= 2) {
                    value = value.substring(0, 2) + '/' + value.substring(2, 4);
                }
                $(this).val(value);
            });

            $('#titular-tarjeta, #cvv-tarjeta').on('input', function() {
                $(this).removeClass('campo-requerido');
            });

            $('#cvv-tarjeta').on('input', function() {
                $(this).val($(this).val().replace(/\D/g, ''));
            });
        });
    </script>
}