@model IEnumerable<eCommerce.Entities.ViewModels.DetalleProductoViewModel>

@{
    Layout = null; // Usaremos un layout integrado en esta página para asegurarnos de que Bootstrap funciona
    ViewData["Title"] = "Catálogo";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <title>@ViewData["Title"] - Mi Tienda</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Estilos propios -->
    <link href="~/css/styles.css" rel="stylesheet" />
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container px-4 px-lg-5">
            <a class="navbar-brand" href="@Url.Action("Index", "Catalogo", new { area = "Negocio" })">Mi Tienda</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">
                    <li class="nav-item"><a class="nav-link active" aria-current="page" href="#">Inicio</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Contacto</a></li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown">Categorías</a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            @if (ViewBag.Categorias != null)
                            {
                                foreach (var cat in ViewBag.Categorias as List<eCommerce.Entities.Categoria>)
                                {
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Index", "Catalogo", new { area = "Negocio", categoriaId = cat.IdCategoria })">
                                            @cat.Descripcion
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                    </li>
                </ul>
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown">
                                Hola, @User.Identity.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="#">Perfil</a></li>
                                <li><a class="dropdown-item" href="#">Configuración</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li><a class="dropdown-item" href="@Url.Action("Logout", "Auth", new { area = "" })" id="logoutLink">Cerrar sesión</a></li>
                            </ul>
                        </li>
                    }
                    <li class="nav-item">
                        <a class="btn btn-outline-dark" href="#" id="cartButton">
                            <i class="bi-cart-fill me-1"></i>
                            Carrito
                            <span class="badge bg-dark text-white ms-1 rounded-pill">0</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Header -->
    <header class="bg-dark py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                <h1 class="display-4 fw-bolder">Hardware Store</h1>
                <p class="lead fw-normal text-white-50 mb-0">Encontrá lo que buscás</p>
            </div>
        </div>
    </header>

    <!-- Catálogo -->
    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5">
            <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
                @foreach (var producto in Model)
                {
                    <div class="col mb-5">
                        <div class="card h-100">
                            <!-- Imagen del producto con link a detalle -->
                            <a href="@Url.Action("Detalle", "Catalogo", new { area = "Negocio", id = producto.IdProducto })" class="text-decoration-none text-dark">
                                <img class="card-img-top" src="@(producto.RutaImagen ?? "https://dummyimage.com/450x300/dee2e6/6c757d.jpg")" alt="@producto.Nombre" />
                            </a>
                            <!-- Detalles -->
                            <div class="card-body p-4 text-center">
                                <a href="@Url.Action("Detalle", "Catalogo", new { area = "Negocio", id = producto.IdProducto })" class="text-decoration-none text-dark">
                                    <h5 class="fw-bolder">@producto.Nombre</h5>
                                </a>
                                @if (producto.Precio.HasValue)
                                {
                                    <span>$@producto.Precio.Value.ToString("F2")</span>
                                }
                                else
                                {
                                    <span class="text-muted">Precio no disponible</span>
                                }
                            </div>
                            <!-- Acciones -->
                            <div class="card-footer p-4 pt-0 border-top-0 bg-transparent text-center">
                                <button class="btn btn-outline-dark mt-auto">Agregar al carrito</button>
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="py-5 bg-dark">
        <div class="container"><p class="m-0 text-center text-white">&copy; 2025 -Hardware Store</p></div>
    </footer>

    <!-- Modal Login -->
    <div class="modal fade" id="loginModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Iniciar sesión</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form method="post" action="@Url.Action("Login", "Auth", new { area = "" })">
                        <div class="mb-3">
                            <label for="correo" class="form-label">Correo</label>
                            <input type="email" class="form-control" id="correo" name="correo" required>
                        </div>
                        <div class="mb-3">
                            <label for="contraseña" class="form-label">Contraseña</label>
                            <input type="password" class="form-control" id="contraseña" name="contraseña" required>
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">Iniciar sesión</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>

    <script>
        // Confirmación logout
        document.getElementById("logoutLink")?.addEventListener("click", function(e){
            e.preventDefault();
            Swal.fire({
                title: 'Cerrar sesión',
                text: "¿Seguro que querés salir?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, cerrar sesión',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if(result.isConfirmed){
                    window.location.href = '@Url.Action("Logout", "Auth", new { area = "" })';
                }
            });
        });

        // Abrir modal si no está logueado
        function requireLogin(){
            var loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
            loginModal.show();
        }

        document.getElementById("cartButton")?.addEventListener("click", function(e){
            e.preventDefault();
            if(!@User.Identity.IsAuthenticated.ToString().ToLower()){
                requireLogin();
            } else {
                Swal.fire('Carrito', 'Aquí iría tu carrito...', 'info');
            }
        });

        // SweetAlert2 }
        @if (TempData["Success"] != null)
        {
                <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Éxito',
                    text: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(TempData["Success"])),
                    confirmButtonColor: '#3085d6'
                });
                </text>
        }
        @if (TempData["Error"] != null)
        {
                <text>
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: @Html.Raw(System.Text.Json.JsonSerializer.Serialize(TempData["Error"])),
                    confirmButtonColor: '#3085d6'
                });
                </text>
        }
    </script>

    <style>
        .card-img-top {
            object-fit: cover;
            height: 200px; 
        }
    </style>
</body>
</html>
