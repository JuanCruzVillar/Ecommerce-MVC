// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.Data;

#nullable disable

namespace eCommerceMVC.Migrations
{
    [DbContext(typeof(DbecommerceContext))]
    [Migration("20250920033659_BaseInicial")]
    partial class BaseInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eCommerce.Entities.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCarrito");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrito"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("IdUsuario");

                    b.HasKey("IdCarrito")
                        .HasName("PK_CARRITO");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("CARRITO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoriaPadre")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdCategoriaPadre");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombres")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Restablecer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdCliente")
                        .HasName("PK__CLIENTE__D5946642A7D1C625");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Cupon", b =>
                {
                    b.Property<int>("IdCupon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCupon"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("DescuentoFijo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("DescuentoPorcentaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<decimal>("MontoMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("UsosActuales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("UsosMaximos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("IdCupon");

                    b.HasIndex("Codigo")
                        .IsUnique()
                        .HasDatabaseName("UQ_CUPON_CODIGO");

                    b.ToTable("CUPON", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.DetalleVentas", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DETALLE___AAA5CEC28EC83973");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DETALLE_VENTA", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.DireccionEnvio", b =>
                {
                    b.Property<int>("IdDireccionEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccionEnvio"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool>("EsDireccionPrincipal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Referencias")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdDireccionEnvio");

                    b.HasIndex("IdCliente");

                    b.ToTable("DIRECCION_ENVIO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.EstadoPedido", b =>
                {
                    b.Property<int>("IdEstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoPedido"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("IdEstadoPedido");

                    b.ToTable("ESTADO_PEDIDO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.HistorialPedido", b =>
                {
                    b.Property<int>("IdHistorialPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorialPedido"));

                    b.Property<string>("Comentarios")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstadoPedido")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.HasKey("IdHistorialPedido");

                    b.HasIndex("IdEstadoPedido");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdVenta");

                    b.ToTable("HISTORIAL_PEDIDO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdMarca")
                        .HasName("PK__MARCA__4076A887C7600A88");

                    b.ToTable("MARCA", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("RequiereDatosAdicionales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("IdMetodoPago");

                    b.ToTable("METODO_PAGO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("NombreImagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("RutaImagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProducto")
                        .HasName("PK__PRODUCTO__0988921006888CEC");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.ToTable("PRODUCTO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Restablecer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIO__5B65BF97679AF4C5");

                    b.HasIndex("IdCliente");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("Contacto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("CostoEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal?>("DescuentoAplicado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Direccion")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("FechaEstimadaEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdCupon")
                        .HasColumnType("int");

                    b.Property<int?>("IdDireccionEnvio")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("IdMetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("IdProvincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdTransaccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("ImporteTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("NotasEspeciales")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TotalProductos")
                        .HasColumnType("int");

                    b.HasKey("IdVenta")
                        .HasName("PK__VENTA__BC1240BD415D780E");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdCupon");

                    b.HasIndex("IdDireccionEnvio");

                    b.HasIndex("IdEstadoPedido");

                    b.HasIndex("IdMetodoPago");

                    b.ToTable("VENTA", (string)null);
                });

            modelBuilder.Entity("eCommerce.Entities.Carrito", b =>
                {
                    b.HasOne("eCommerce.Entities.Cliente", null)
                        .WithMany("Carritos")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("eCommerce.Entities.Producto", "IdProductoNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_CARRITO_PRODUCTO_IdProducto");

                    b.HasOne("eCommerce.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_CARRITO_USUARIO");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.Categoria", b =>
                {
                    b.HasOne("eCommerce.Entities.Categoria", "CategoriaPadre")
                        .WithMany("SubCategorias")
                        .HasForeignKey("IdCategoriaPadre")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CategoriaPadre");
                });

            modelBuilder.Entity("eCommerce.Entities.DetalleVentas", b =>
                {
                    b.HasOne("eCommerce.Entities.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DETALLE_V__IdPro__52593CB8");

                    b.HasOne("eCommerce.Entities.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DETALLE_V__IdVen__5165187F");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.DireccionEnvio", b =>
                {
                    b.HasOne("eCommerce.Entities.Cliente", "IdClienteNavigation")
                        .WithMany("DireccionesEnvio")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DIRECCION_ENVIO_CLIENTE");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.HistorialPedido", b =>
                {
                    b.HasOne("eCommerce.Entities.EstadoPedido", "IdEstadoPedidoNavigation")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("IdEstadoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HISTORIAL_PEDIDO_ESTADO");

                    b.HasOne("eCommerce.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_HISTORIAL_PEDIDO_USUARIO");

                    b.HasOne("eCommerce.Entities.Venta", "IdVentaNavigation")
                        .WithMany("HistorialPedidos")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HISTORIAL_PEDIDO_VENTA");

                    b.Navigation("IdEstadoPedidoNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.Producto", b =>
                {
                    b.HasOne("eCommerce.Entities.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PRODUCTO__IdCate__403A8C7D");

                    b.HasOne("eCommerce.Entities.Marca", "IdMarcaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PRODUCTO__IdMarc__3F466844");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdMarcaNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.Usuario", b =>
                {
                    b.HasOne("eCommerce.Entities.Cliente", "IdClienteNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__USUARIO__IdClien__5535A963");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.Venta", b =>
                {
                    b.HasOne("eCommerce.Entities.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__VENTA__IdCliente__4D94879B");

                    b.HasOne("eCommerce.Entities.Cupon", "IdCuponNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdCupon")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_VENTA_CUPON");

                    b.HasOne("eCommerce.Entities.DireccionEnvio", "IdDireccionEnvioNavigation")
                        .WithMany()
                        .HasForeignKey("IdDireccionEnvio")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_VENTA_DIRECCION_ENVIO");

                    b.HasOne("eCommerce.Entities.EstadoPedido", "IdEstadoPedidoNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdEstadoPedido")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_VENTA_ESTADO_PEDIDO");

                    b.HasOne("eCommerce.Entities.MetodoPago", "IdMetodoPagoNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_VENTA_METODO_PAGO");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdCuponNavigation");

                    b.Navigation("IdDireccionEnvioNavigation");

                    b.Navigation("IdEstadoPedidoNavigation");

                    b.Navigation("IdMetodoPagoNavigation");
                });

            modelBuilder.Entity("eCommerce.Entities.Categoria", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("eCommerce.Entities.Cliente", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DireccionesEnvio");

                    b.Navigation("Usuarios");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("eCommerce.Entities.Cupon", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("eCommerce.Entities.EstadoPedido", b =>
                {
                    b.Navigation("HistorialPedidos");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("eCommerce.Entities.Marca", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("eCommerce.Entities.MetodoPago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("eCommerce.Entities.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("eCommerce.Entities.Usuario", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("HistorialPedidos");
                });

            modelBuilder.Entity("eCommerce.Entities.Venta", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("HistorialPedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
