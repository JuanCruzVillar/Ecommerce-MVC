@using eCommerce.Entities.ViewModels
@{
    ViewData["Title"] = "Arma tu PC - Procesador";
    Layout = "~/Areas/Negocio/Views/Shared/_Layout.cshtml";
}

@model ArmaPcViewModel

@Html.Partial("Partials/_EstilosComunes")

<div class="arma-pc-page">
    <div class="container">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <a href="@Url.Action("Index")" class="text-decoration-none text-muted mb-3 d-inline-block">
                    <i class="fas fa-arrow-left me-2"></i>Volver Atrás
                </a>
                <h1 class="display-5 fw-bold mb-2">@Model.Titulo</h1>
                <p class="text-muted mb-3">@Model.Descripcion</p>

                <div class="progress-custom mb-2">
                    <div class="progress-bar-custom" style="width: 25%;"></div>
                </div>
                <small class="text-muted">Paso 2 de 8</small>
            </div>
        </div>

        <!-- Filtro de Ordenamiento -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <span class="text-muted small">
                <span id="productCount"></span> productos disponibles
            </span>
            <div class="d-flex align-items-center gap-2">
                <label class="text-muted small mb-0">Ordenar por:</label>
                <select class="form-select form-select-sm" id="sortFilter" style="width: auto; min-width: 180px;">
                    <option value="default">Relevancia</option>
                    <option value="price-asc">Precio: Menor a Mayor</option>
                    <option value="price-desc">Precio: Mayor a Menor</option>
                    <option value="name-asc">Nombre: A-Z</option>
                    <option value="name-desc">Nombre: Z-A</option>
                </select>
            </div>
        </div>

        <div class="row g-4">
          
            <!-- Columna Izquierda - Productos -->
            <div class="col-lg-8">
                <form method="post" action="@Url.Action("SeleccionarProcesador")" id="formProcesador">
                    <input type="hidden" name="marca" value="@Model.MarcaSeleccionada">

                    <div class="row g-3">
                        @foreach (var procesador in Model.ProcesadoresDisponibles)
                        {
                            <div class="col-md-6">
                                <label class="product-card">
                                    <input type="radio"
                                           name="idProcesador"
                                           value="@procesador.IdProducto"
                                           class="d-none">

                                    <div class="card h-100 shadow-sm">
                                        <div class="card-body p-3">
                                            <div class="text-center mb-3 position-relative">
                                                @if (!string.IsNullOrEmpty(procesador.RutaImagen))
                                                {
                                                    <img src="@procesador.RutaImagen" alt="@procesador.Nombre" class="img-fluid" style="max-height: 180px; object-fit: contain;">
                                                }
                                                else
                                                {
                                                    <div class="d-flex align-items-center justify-content-center" style="height: 180px;">
                                                        <i class="fas fa-microchip text-muted" style="font-size: 4rem;"></i>
                                                    </div>
                                                }

                                                <div class="position-absolute top-0 end-0">
                                                    <i class="far fa-question-circle text-muted"></i>
                                                </div>
                                            </div>

                                            <h6 class="fw-bold mb-2" style="min-height: 40px; font-size: 0.9rem;">
                                                @procesador.Nombre
                                            </h6>

                                            @if (procesador.Especificaciones.Any())
                                            {
                                                <div class="mb-3">
                                                    @foreach (var spec in procesador.Especificaciones.Take(2))
                                                    {
                                                        <small class="text-muted d-block" style="font-size: 0.75rem;">
                                                            @spec.Valor
                                                        </small>
                                                    }
                                                </div>
                                            }

                                            <div class="mb-2">
                                                <h5 class="mb-0 fw-bold" style="color: #667eea;">$@procesador.Precio.ToString("N0")</h5>
                                            </div>

                                            <div class="d-flex align-items-center justify-content-between">
                                                @if (procesador.EnStock)
                                                {
                                                    <small class="text-success">
                                                        <i class="fas fa-check-circle me-1"></i>Compatible
                                                    </small>
                                                }

                                                <div class="selection-indicator">
                                                    <i class="fas fa-check-circle text-success" style="font-size: 1.2rem;"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </label>
                            </div>
                        }
                    </div>

                    <div class="d-lg-none mt-4">
                        <button type="submit" class="btn btn-gradient btn-lg w-100 fw-bold" id="btnSiguienteMobile" disabled>
                            Siguiente Paso <i class="fas fa-arrow-right ms-2"></i>
                        </button>
                    </div>
                </form>
            </div>

            <!-- Columna Derecha - Resumen -->
            <div class="col-lg-4">
                @Html.Partial("Partials/_ComponentesSidebar", Model)

                <div class="mt-3 d-none d-lg-block">
                    <button type="submit" form="formProcesador" class="btn btn-gradient btn-lg w-100 fw-bold" id="btnSiguiente" disabled>
                        Siguiente Paso <i class="fas fa-arrow-right ms-2"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    document.querySelectorAll('input[name="idProcesador"]').forEach(input => {
        input.addEventListener('change', function() {
            document.getElementById('btnSiguiente').disabled = false;
            const btnMobile = document.getElementById('btnSiguienteMobile');
            if (btnMobile) btnMobile.disabled = false;
        });
    });

        // Script de Filtro de Ordenamiento
    const sortFilter = document.getElementById('sortFilter');
    const productGrid = document.querySelector('.row.g-3');
    const productCards = Array.from(productGrid.children);

    // Mostrar contador de productos
    const productCount = document.getElementById('productCount');
    if (productCount) {
        productCount.textContent = productCards.length;
    }

    // Función para obtener datos del producto
    function getProductData(card) {
        const priceText = card.querySelector('h5')?.textContent || '0';
        const price = parseInt(priceText.replace(/\D/g, '')) || 0;
        const name = card.querySelector('h6')?.textContent?.trim() || '';
        return { element: card, price, name };
    }

    // Guardar datos originales
    const products = productCards.map(getProductData);

    // Evento de cambio en el filtro
    sortFilter.addEventListener('change', function() {
        const sortValue = this.value;
        let sortedProducts = [...products];

        switch(sortValue) {
            case 'price-asc':
                sortedProducts.sort((a, b) => a.price - b.price);
                break;
            case 'price-desc':
                sortedProducts.sort((a, b) => b.price - a.price);
                break;
            case 'name-asc':
                sortedProducts.sort((a, b) => a.name.localeCompare(b.name));
                break;
            case 'name-desc':
                sortedProducts.sort((a, b) => b.name.localeCompare(a.name));
                break;
            case 'default':
                sortedProducts = [...products];
                break;
        }

        // Reordenar elementos en el DOM
        productGrid.innerHTML = '';
        sortedProducts.forEach(product => {
            productGrid.appendChild(product.element);
        });
    });
</script>